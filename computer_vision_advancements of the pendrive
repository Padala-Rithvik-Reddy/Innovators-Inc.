import cv2
import os
import face_recognition
import numpy as np

# Load dataset
dataset_path = "dataset"
known_faces = []
known_names = []

# Load each person's images
for person_name in os.listdir(dataset_path):
    person_folder = os.path.join(dataset_path, person_name)
    
    if not os.path.isdir(person_folder):
        continue  # Skip non-folder files
    
    for image_name in os.listdir(person_folder):
        img_path = os.path.join(person_folder, image_name)
        image = face_recognition.load_image_file(img_path)
        
        # Encode face
        encodings = face_recognition.face_encodings(image)
        if encodings:
            known_faces.append(encodings[0])  # Store first detected face encoding
            known_names.append(person_name)   # Store the name

# Start webcam
cap = cv2.VideoCapture(0)

print("Press 'q' to exit...")

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Convert to RGB (required by face_recognition)
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # Detect faces and get encodings
    face_locations = face_recognition.face_locations(rgb_frame)
    face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)

    for face_encoding, (top, right, bottom, left) in zip(face_encodings, face_locations):
        matches = face_recognition.compare_faces(known_faces, face_encoding, tolerance=0.6)
        name = "Unknown"

        if True in matches:
            match_index = np.argmin(face_recognition.face_distance(known_faces, face_encoding))
            name = known_names[match_index]

        # Draw box & name
        cv2.rectangle(frame, (left, top), (right, bottom), (0, 255, 0), 2)
        cv2.putText(frame, name, (left, top - 10), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

    cv2.imshow("Face Recognition", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
